
//METHOD-1 USING HASHING TC=O(n) SC=O(n)
class Solution {
  public:
    Node *cloneLinkedList(Node *head) {
        unordered_map<Node*,Node*> m;
        Node *temp=head,*x=head;
        while(head){
            m[head]=new Node(head->data);
            head=head->next;
        }
        
        while(temp){
            m[temp]->next=m[temp->next];
            m[temp]->random=m[temp->random];
            temp=temp->next;
        }
        return m[x];
    }
};


//METHOD-2 TC=O(n) SC=(1)


class Solution {
  public:
    Node *cloneLinkedList(Node *head) {
        Node *temp=head;
        
        while(temp){
            Node *x=new Node(temp->data);
            x->next=temp->next;
            temp->next=x;
            temp=x->next;
        }
        
        temp=head;
         
        while(temp){
            Node *x=temp->next,*y=temp->random;
           if (y) {
            x->random = y->next;
             }
            temp=temp->next->next;
        }
      
        temp=head;
         Node *res=temp->next;
      while (temp) {
            Node *clone = temp->next;
            temp->next = clone->next;
            if (clone->next) {
                clone->next = clone->next->next;
            }
            temp = temp->next;
        }
        return res;
    }
};
