//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> spirallyTraverse(vector<vector<int> > &mat) {
        vector<int> res;
        int r=mat.size(),c=mat[0].size();
        int top=0,left=0,right=c-1,bottom=r-1;
        
       while(top<=bottom &&left<=right){
           for(int i=top;i<=right;i++) res.push_back(mat[top][i]);
           top++;
           for(int i=top;i<=bottom;i++) res.push_back(mat[i][right]);
           right--;
           if(bottom>=top){
               for(int i=right;i>=left;i--) res.push_back(mat[bottom][i]);
               bottom--;
           }
           if(right>=left){
               for(int i=bottom;i>=top;i--) res.push_back(mat[i][left]);
               left++;
           }
       }
       return res;
        }
    };

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;

    while (t--) {
        int r, c;
        cin >> r >> c;
        vector<vector<int>> matrix(r);

        for (int i = 0; i < r; i++) {
            matrix[i].assign(c, 0);
            for (int j = 0; j < c; j++) {
                cin >> matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix);
        for (int i = 0; i < result.size(); ++i)
            cout << result[i] << " ";
        cout << endl;

        cout << "~"
             << "\n";
    }
    return 0;
}
// } Driver Code Ends
