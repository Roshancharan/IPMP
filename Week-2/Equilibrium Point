//{ Driver Code Starts
// Initial Template for C++
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function to find equilibrium point in the array.
    int equilibriumPoint(vector<int> &arr) {
       int n=arr.size();
       long long int left_sum=arr[0],right_sum=arr[n-1];
       int left=0,right=n-1;
       while(right-left!=2){
           if(left_sum==right_sum){
               left++;
               right--;
               left_sum+=(long long int)arr[left];
               right_sum+=(long long int)arr[right];
           }else if(left_sum>right_sum){
                right--;
                right_sum+=(long long int)arr[right];
           }else{
                 left++;
                  left_sum+=(long long int)arr[left];
           }
       }
       if(left_sum==right_sum) return left+2;
       else return -1;
     }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore(); // To discard any leftover newline characters
    while (t--)   // while testcases exist
    {
        vector<int> arr;
        string input;
        getline(cin, input); // Read the entire line for the array elements
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        Solution ob;
        cout << ob.equilibriumPoint(arr) << endl;
        cout << "~" << endl;
    }
}
// } Driver Code Ends
