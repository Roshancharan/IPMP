//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Complete this function
    // Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(vector<int>& arr) {
        int n=arr.size();
        if(n==1) return arr[0]==0;
        
        for(int i=0;i<n;i++){
            if(arr[i]==0) return 1;
        }
        
        bool flag=0;
        unordered_set<long long int> s;
        s.insert(arr[0]);
        long long int sum=arr[0];
        for(int i=1;i<n;i++){
            if(s.count(sum+arr[i]) || sum==0){
                flag=1;
                break;
            }else{
                sum+=(long long int)arr[i];
                s.insert(sum);
            }
        }
        if(s.count(0)) flag=1;
        return flag;
    }
};

//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        Solution obj;
        if (obj.subArrayExists(arr))
            cout << "true\n";
        else
            cout << "false\n";

        cout << "~" << endl;
    }
    return 0;
}
// } Driver Code Ends
