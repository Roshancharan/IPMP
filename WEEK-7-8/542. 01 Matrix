class Solution {

   
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size(),m=mat[0].size();

        vector<vector<int>> dis(n,vector<int>(m,1e9));
        queue<pair<int,int>> q;
        

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){ dis[i][j]=0;q.push({i,j});}
            }
        }

        while(!q.empty()){
            auto edge=q.front();
            q.pop();
            int r,c;
            for(int i=-1;i<=1;i+=2){
                r=edge.first+i,c=edge.second;
                if((r>=0&&r<n)&&(c>=0&&c<m)&&dis[r][c]>dis[edge.first][edge.second]+1){
                    dis[r][c]=dis[edge.first][edge.second]+1;
                    q.push({r,c});
                }

                r=edge.first,c=edge.second+i;
                if((r>=0&&r<n)&&(c>=0&&c<m)&&dis[r][c]>dis[edge.first][edge.second]+1){
                    dis[r][c]=dis[edge.first][edge.second]+1;
                    q.push({r,c});
                }
            }
        }

        return dis;
        
    }
};
